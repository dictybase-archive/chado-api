FORMAT:1A

# Chado
Chado API is to manage data in chado database through HTTP resources. The
resource data is modeled and managed according to [JSON
API](http://jsonapi.org).

## Query parameters
All resources with **GET** requests supports the following query parameters to refine responses...

- **[include](http://jsonapi.org/format/#fetching-includes)**, e.g. `GET
  /publications/34?include=authors` to include all authors with publication.

- **[sparse fieldsets](http://jsonapi.org/format/#fetching-sparse-fieldsets)**,
  e.g. `GET /publications/34?fields[publications]=title,abstract` to return only title and abstract fields.
  For a better discussion and clarification of the concept, read
  [here](http://discuss.jsonapi.org/t/clarification-on-the-sparse-fieldset-response/221/4)

All collection resources with **GET** requests also supports the following query paramaters...

- **[filter](https://github.com/dictyBase/Migration/blob/master/Webservice-specs.md#filtering)**

- **[pagination](https://github.com/dictyBase/Migration/blob/master/Webservice-specs.md#pagination)**,
  e.g. `GET /publications?page[number]=2&page[size]=10` to fetch second page of
  10 publications.

# Group Publication
Resources related to **publications** in the API.


## Publication [/publications/{publication_id}]
+ Parameters
    + publication_id: 26099919 (number, required) - The id will be primarily
      [pubmed identifier](https://en.wikipedia.org/wiki/PubMed#PubMed_identifier).
      However for handful of non-published resources, internally generated
      identifiers will be used. 


### Retrieve a specific publication [GET]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Body

            {
                "data": {
                    "links": {
                        "self": "/publications/26099919"
                    },
                    "type": "publications",
                    "id": "26088819",
                    "attributes": {
                        "doi": "10.1002/dvg.22867",
                        "title": "dictyBase 2015: Expanding data and annotations in a new software environment",
                        "abstract": "dictyBase is the model organism database ......",
                        "journal": "Genesis",
                        "year": "2015",
                        "volume": "12",
                        "pages": "765-80",
                        "month": "june",
                        "issn": "1526-968X",
                        "pub_type": "journal_article",
                        "source": "pubmed",
                        "issue": "8",
                        "status": "ppublish"
                    },
                    "relationships": {
                        "authors": {
                            "links": {
                                "related": "/publication/26099919/authors"
                            }
                        }
                    }
                }
            }


+ Response 404 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "404",
                "title": "Resource not found"
                "detail": "The resource with id 483943 does not exist"
              }]
            }


+ Response 400 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "400",
                "source": { "parameter": "include" },
                "title": "Invalid include query parameter",
                "detail": "The resource does not have foo relationship for inclusion"
              }]
            }


### Delete a specific publication [DELETE]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 204

+ Response 404 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "404",
                "title": "resource not found"
                "detail": "......."
              }]
            }


### Update a specific publication [PATCH]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json  

    + Body

            {
                "data": {
                    "type": "publications",
                    "id": "26088819",
                    "attributes": {
                        "doi": "10.1002/dvg.22867",
                        "title": "dictyBase 2015: Expanding data and annotations in a new software environment",
                        "abstract": "dictyBase is the model organism database ......",
                        "journal": "Genesis",
                        "year": "2015",
                        "volume": "12",
                        "pages": "765-80",
                        "month": "june",
                        "issn": "1526-968X",
                        "pub_type": "journal_article",
                        "source": "pubmed",
                        "issue": "8",
                        "status": "ppublish"
                    }
                }
            }

+ Response 204

+ Response 404 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "404",
                "title": "resource not found"
                "detail": "......."
              }]
            }

## Publication collection [/publications]

###  List of all publications [GET]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Body

                {
                    "data": [
                        {
                            "links": {
                                "self": "/publications/26088819"
                            }
                            "type": "publications",
                            "id": "26088819",
                            "attributes": {
                                "doi": "10.1002/dvg.22867",
                                "title": "dictyBase 2015: Expanding data and annotations in a new software environment",
                                "abstract": "dictyBase is the model organism database ......",
                                "journal": "Genesis",
                                "year": "2015",
                                "volume": "12",
                                "pages": "765-80",
                                "month": "june",
                                "issn": "1526-968X",
                                "source": "pubmed",
                                "issue": "8",
                                "status": "ppublish",
                                "pub_type": "journal_article"
                            },
                            "relationships": {
                                "authors": {
                                    "links": {
                                        "related": "/publication/26088819/authors"
                                    }
                                }
                            }
                        }, 
                        {
                            "links": {
                                "self": "/publications/23172289"
                            }
                            "type": "publications",
                            "id": "23172289",
                            "attributes": {
                                "doi": "10.1093/nar/gks1064",
                                "title": "dictyBase 2013: Integrating multiple dictyostelid species",
                                "abstract": "dictyBase is the model organism database ......",
                                "journal": "Nucleic Acids Research",
                                "year": "2013",
                                "volume": "41",
                                "pages": "676-80",
                                "issue": "18",
                                "month": "jan",
                                "issn": "1362-4962",
                                "source": "pubmed",
                                "status": "epublish",
                                "pub_type": "journal_article"
                            },
                            "relationships": {
                                "authors": {
                                    "links": {
                                        "related": "/publication/23172289/authors"
                                    }
                                }
                            }
                        }
                    ],
                    "links": {
                        "self": "/publications?page[number]=6&page[size]=10",
                        "next": "/publications?page[number]=7&page[size]=10",
                        "prev": "/publications?page[number]=5&page[size]=10",
                        "last": "/publications?page[number]=80&page[size]=10",
                        "first": "/publications?page[number]=1&page[size]=10"
                    },
                    "meta": {
                        "pagination": {
                            "records": 800,
                            "total": 80,
                            "size": 10,
                            "number": 6
                        }
                    }
                }


+ Response 400 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "400",
                "source": { "parameter": "include" },
                "title": "Invalid include query parameter",
                "detail": "The resource does not have foo relationship for inclusion"
              }]
            }


### Create a new publication [POST]
A new publication resource can be created either by ...  
- supplying an id: The value should be in `data.attributes.pubid` field.  
- not supplying an id: In this case one will be created by the server.

The example below represents the first case.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

    + Body

            {
                "data": {
                    "type": "publications",
                    "attributes": {
                        "doi": "10.1002/dvg.22867",
                        "title": "dictyBase 2015: Expanding data and annotations in a new software environment",
                        "abstract": "dictyBase is the model organism database ......",
                        "journal": "Genesis",
                        "year": "2015",
                        "volume": "12",
                        "pages": "765-80",
                        "month": "june",
                        "issn": "1526-968X",
                        "pub_type": "journal_article",
                        "source": "pubmed",
                        "pubid": "26088819",
                        "issue": "8",
                        "status": "ppublish"
                    }
                }
            }

+ Response 201 (application/vnd.api+json)  

    + Headers

            Location: /publications/26088819  

    + Body  

            {
                "data": {
                    "links": {
                        "self": "/publications/26088819"
                    },
                    "type": "publications",
                    "id": "26088819",
                    "attributes": {
                        "doi": "10.1002/dvg.22867",
                        "title": "dictyBase 2015: Expanding data and annotations in a new software environment",
                        "abstract": "dictyBase is the model organism database ......",
                        "journal": "Genesis",
                        "year": "2015",
                        "volume": "12",
                        "pages": "765-80",
                        "month": "june",
                        "issn": "1526-968X",
                        "pub_type": "journal_article",
                        "source": "pubmed",
                        "issue": "8",
                        "status": "ppublish"
                    }
                }
            }


+ Response 409 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "409",
                "source": {"pointer": "/data/attributes/pubid"},
                "links": {"about": "/publications/26088819"}
                "title": "Resource exists",
                "detail": "id 26088819 exist, resource cannot not created",
              }]
            }

# Group Author
The author resources are dependent of publication and are managed as
relationship resource. For details look at generic
[specifications](http://jsonapi.org/format/#crud-updating-relationships) and
expected [behaviour](/Webservice-specs.md#self-related-and-http-methods) in
of this concept.

## Author collection [/publications/{publication_id}/authors]
+ Parameters
    + publication_id: 26099919 (number, required) - The id will be primarily pubmed identifier. 


### List of authors for a publication [GET]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Body  

            {
                "data": [
                    {
                        "type": "authors",
                        "id": "483493",
                        "links": {
                            "self": "/authors/483943"
                        },
                        "attributes": {
                            "last_name": "Wardroper",
                            "given_names": "A",
                            "rank": "22"
                        }
                        "relationships": {
                            "publication": {
                                "links": {
                                    "related": "/authors/483943/publication"
                                }
                            }
                        }
                    },
                    {
                        "type": "authors",
                        "id": "3479343",
                        "links": {
                            "self": "/authors/3479343"
                        },
                        "attributes": {
                            "last_name": "Quail",
                            "given_names": "MA",
                            "rank": "11"
                        },
                        "relationships": {
                            "publication": {
                                "links": {
                                    "related": "/authors/3479343/publication"
                                }
                            }
                        }
                    }
                ],
                "links": {
                    "self": "/publications/383439/authors"
                }
            }

+ Response 400 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "400",
                "source": { "parameter": "include" },
                "title": "Unsupported include query parameter",
                "detail": "The resource does not support include query parameter"
              }]
            }

### Add new author for a publication [POST]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

    + Body

            {
                "data": {
                    "type": "authors",
                    "attributes": {
                        "last_name": "Wardroper",
                        "given_names": "A",
                        "rank": "22"
                    }
                }
            }

+ Response 201 (application/vnd.api+json)  

    + Headers

            Location: /authors/58

    + Body  

            {
                "data": {
                    "links": {
                        "self": "/authors/58"
                    }
                    "type": "authors",
                    "id": "58",
                    "attributes": {
                        "last_name": "Wardroper",
                        "given_names": "A",
                        "rank": "22"
                    },
                    "relationships": {
                        "publication": {
                            "links": {
                                "related": "/authors/58/publication"
                            }
                        }
                    }
                }
            }


## Author [/authors/{author_id}]
+ Parameters
    + author_id: 20 (number, required) - The author id.

### Retrieve a specific author [GET]

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

    + Body

            {
                "data": {
                    "links": {
                        "self": "/authors/58"
                    }
                    "type": "authors",
                    "id": "58",
                    "attributes": {
                        "last_name": "Wardroper",
                        "given_names": "A",
                        "rank": "22"
                    },
                    "relationships": {
                        "publication": {
                            "links": {
                                "related": "/authors/58/publication"
                            }
                        }
                    }
                }
            }


+ Response 200 (application/vnd.api+json)

+ Response 404 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "404",
                "title": "Resource not found"
                "detail": "The resource with id 483943 does not exist"
              }]
            }

### Update a specific author [PATCH]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

    + Body

            {
                "data": {
                    "type": "authors",
                    "attributes": {
                        "last_name": "Oreilly",
                        "given_names": "John",
                        "rank": "2"
                    }
                }
            }

+ Response 204

+ Response 404 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "404",
                "title": "resource not found"
                "detail": "......."
              }]
            }

### Delete a specific author [DELETE]
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 204

+ Response 404 (application/vnd.api+json)

    + Body

            {
              "errors": [{
                "status": "404",
                "title": "resource not found"
                "detail": "......."
              }]
            }

